/**
 * This program and the accompanying materials
 * are made available under the terms of the License
 * which accompanies this distribution in the file LICENSE.txt
 */
package com.archimatetool.model.provider;

import com.archimatetool.model.util.ArchimateAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class ArchimateItemProviderAdapterFactory extends ArchimateAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ArchimateItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertyItemProvider propertyItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertyAdapter() {
		if (propertyItemProvider == null) {
			propertyItemProvider = new PropertyItemProvider(this);
		}

		return propertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IFeature} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FeatureItemProvider featureItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IFeature}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFeatureAdapter() {
		if (featureItemProvider == null) {
			featureItemProvider = new FeatureItemProvider(this);
		}

		return featureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IMetadata} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MetadataItemProvider metadataItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IMetadata}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMetadataAdapter() {
		if (metadataItemProvider == null) {
			metadataItemProvider = new MetadataItemProvider(this);
		}

		return metadataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IFolder} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FolderItemProvider folderItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IFolder}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFolderAdapter() {
		if (folderItemProvider == null) {
			folderItemProvider = new FolderItemProvider(this);
		}

		return folderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IArchimateModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArchimateModelItemProvider archimateModelItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IArchimateModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArchimateModelAdapter() {
		if (archimateModelItemProvider == null) {
			archimateModelItemProvider = new ArchimateModelItemProvider(this);
		}

		return archimateModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IJunction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JunctionItemProvider junctionItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IJunction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJunctionAdapter() {
		if (junctionItemProvider == null) {
			junctionItemProvider = new JunctionItemProvider(this);
		}

		return junctionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IApplicationCollaboration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ApplicationCollaborationItemProvider applicationCollaborationItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IApplicationCollaboration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createApplicationCollaborationAdapter() {
		if (applicationCollaborationItemProvider == null) {
			applicationCollaborationItemProvider = new ApplicationCollaborationItemProvider(this);
		}

		return applicationCollaborationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IApplicationComponent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ApplicationComponentItemProvider applicationComponentItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IApplicationComponent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createApplicationComponentAdapter() {
		if (applicationComponentItemProvider == null) {
			applicationComponentItemProvider = new ApplicationComponentItemProvider(this);
		}

		return applicationComponentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IApplicationEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ApplicationEventItemProvider applicationEventItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IApplicationEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createApplicationEventAdapter() {
		if (applicationEventItemProvider == null) {
			applicationEventItemProvider = new ApplicationEventItemProvider(this);
		}

		return applicationEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IApplicationFunction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ApplicationFunctionItemProvider applicationFunctionItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IApplicationFunction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createApplicationFunctionAdapter() {
		if (applicationFunctionItemProvider == null) {
			applicationFunctionItemProvider = new ApplicationFunctionItemProvider(this);
		}

		return applicationFunctionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IApplicationInteraction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ApplicationInteractionItemProvider applicationInteractionItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IApplicationInteraction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createApplicationInteractionAdapter() {
		if (applicationInteractionItemProvider == null) {
			applicationInteractionItemProvider = new ApplicationInteractionItemProvider(this);
		}

		return applicationInteractionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IApplicationInterface} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ApplicationInterfaceItemProvider applicationInterfaceItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IApplicationInterface}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createApplicationInterfaceAdapter() {
		if (applicationInterfaceItemProvider == null) {
			applicationInterfaceItemProvider = new ApplicationInterfaceItemProvider(this);
		}

		return applicationInterfaceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IApplicationProcess} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ApplicationProcessItemProvider applicationProcessItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IApplicationProcess}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createApplicationProcessAdapter() {
		if (applicationProcessItemProvider == null) {
			applicationProcessItemProvider = new ApplicationProcessItemProvider(this);
		}

		return applicationProcessItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IApplicationService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ApplicationServiceItemProvider applicationServiceItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IApplicationService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createApplicationServiceAdapter() {
		if (applicationServiceItemProvider == null) {
			applicationServiceItemProvider = new ApplicationServiceItemProvider(this);
		}

		return applicationServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IArtifact} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArtifactItemProvider artifactItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IArtifact}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArtifactAdapter() {
		if (artifactItemProvider == null) {
			artifactItemProvider = new ArtifactItemProvider(this);
		}

		return artifactItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IAssessment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AssessmentItemProvider assessmentItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IAssessment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAssessmentAdapter() {
		if (assessmentItemProvider == null) {
			assessmentItemProvider = new AssessmentItemProvider(this);
		}

		return assessmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IBusinessActor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BusinessActorItemProvider businessActorItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IBusinessActor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBusinessActorAdapter() {
		if (businessActorItemProvider == null) {
			businessActorItemProvider = new BusinessActorItemProvider(this);
		}

		return businessActorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IBusinessCollaboration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BusinessCollaborationItemProvider businessCollaborationItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IBusinessCollaboration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBusinessCollaborationAdapter() {
		if (businessCollaborationItemProvider == null) {
			businessCollaborationItemProvider = new BusinessCollaborationItemProvider(this);
		}

		return businessCollaborationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IBusinessEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BusinessEventItemProvider businessEventItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IBusinessEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBusinessEventAdapter() {
		if (businessEventItemProvider == null) {
			businessEventItemProvider = new BusinessEventItemProvider(this);
		}

		return businessEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IBusinessFunction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BusinessFunctionItemProvider businessFunctionItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IBusinessFunction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBusinessFunctionAdapter() {
		if (businessFunctionItemProvider == null) {
			businessFunctionItemProvider = new BusinessFunctionItemProvider(this);
		}

		return businessFunctionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IBusinessInteraction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BusinessInteractionItemProvider businessInteractionItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IBusinessInteraction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBusinessInteractionAdapter() {
		if (businessInteractionItemProvider == null) {
			businessInteractionItemProvider = new BusinessInteractionItemProvider(this);
		}

		return businessInteractionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IBusinessInterface} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BusinessInterfaceItemProvider businessInterfaceItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IBusinessInterface}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBusinessInterfaceAdapter() {
		if (businessInterfaceItemProvider == null) {
			businessInterfaceItemProvider = new BusinessInterfaceItemProvider(this);
		}

		return businessInterfaceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IBusinessObject} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BusinessObjectItemProvider businessObjectItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IBusinessObject}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBusinessObjectAdapter() {
		if (businessObjectItemProvider == null) {
			businessObjectItemProvider = new BusinessObjectItemProvider(this);
		}

		return businessObjectItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IBusinessProcess} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BusinessProcessItemProvider businessProcessItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IBusinessProcess}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBusinessProcessAdapter() {
		if (businessProcessItemProvider == null) {
			businessProcessItemProvider = new BusinessProcessItemProvider(this);
		}

		return businessProcessItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IBusinessRole} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BusinessRoleItemProvider businessRoleItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IBusinessRole}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBusinessRoleAdapter() {
		if (businessRoleItemProvider == null) {
			businessRoleItemProvider = new BusinessRoleItemProvider(this);
		}

		return businessRoleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IBusinessService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BusinessServiceItemProvider businessServiceItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IBusinessService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBusinessServiceAdapter() {
		if (businessServiceItemProvider == null) {
			businessServiceItemProvider = new BusinessServiceItemProvider(this);
		}

		return businessServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.ICapability} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CapabilityItemProvider capabilityItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.ICapability}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCapabilityAdapter() {
		if (capabilityItemProvider == null) {
			capabilityItemProvider = new CapabilityItemProvider(this);
		}

		return capabilityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.ICommunicationNetwork} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CommunicationNetworkItemProvider communicationNetworkItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.ICommunicationNetwork}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCommunicationNetworkAdapter() {
		if (communicationNetworkItemProvider == null) {
			communicationNetworkItemProvider = new CommunicationNetworkItemProvider(this);
		}

		return communicationNetworkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IContract} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContractItemProvider contractItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IContract}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContractAdapter() {
		if (contractItemProvider == null) {
			contractItemProvider = new ContractItemProvider(this);
		}

		return contractItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IConstraint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstraintItemProvider constraintItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IConstraint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConstraintAdapter() {
		if (constraintItemProvider == null) {
			constraintItemProvider = new ConstraintItemProvider(this);
		}

		return constraintItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.ICourseOfAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CourseOfActionItemProvider courseOfActionItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.ICourseOfAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCourseOfActionAdapter() {
		if (courseOfActionItemProvider == null) {
			courseOfActionItemProvider = new CourseOfActionItemProvider(this);
		}

		return courseOfActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IDataObject} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataObjectItemProvider dataObjectItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IDataObject}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataObjectAdapter() {
		if (dataObjectItemProvider == null) {
			dataObjectItemProvider = new DataObjectItemProvider(this);
		}

		return dataObjectItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IDeliverable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DeliverableItemProvider deliverableItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IDeliverable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDeliverableAdapter() {
		if (deliverableItemProvider == null) {
			deliverableItemProvider = new DeliverableItemProvider(this);
		}

		return deliverableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IDevice} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DeviceItemProvider deviceItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IDevice}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDeviceAdapter() {
		if (deviceItemProvider == null) {
			deviceItemProvider = new DeviceItemProvider(this);
		}

		return deviceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IDistributionNetwork} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DistributionNetworkItemProvider distributionNetworkItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IDistributionNetwork}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDistributionNetworkAdapter() {
		if (distributionNetworkItemProvider == null) {
			distributionNetworkItemProvider = new DistributionNetworkItemProvider(this);
		}

		return distributionNetworkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IDriver} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DriverItemProvider driverItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IDriver}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDriverAdapter() {
		if (driverItemProvider == null) {
			driverItemProvider = new DriverItemProvider(this);
		}

		return driverItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IEquipment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EquipmentItemProvider equipmentItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IEquipment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEquipmentAdapter() {
		if (equipmentItemProvider == null) {
			equipmentItemProvider = new EquipmentItemProvider(this);
		}

		return equipmentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IFacility} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FacilityItemProvider facilityItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IFacility}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFacilityAdapter() {
		if (facilityItemProvider == null) {
			facilityItemProvider = new FacilityItemProvider(this);
		}

		return facilityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IGap} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GapItemProvider gapItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IGap}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGapAdapter() {
		if (gapItemProvider == null) {
			gapItemProvider = new GapItemProvider(this);
		}

		return gapItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IGoal} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GoalItemProvider goalItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IGoal}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGoalAdapter() {
		if (goalItemProvider == null) {
			goalItemProvider = new GoalItemProvider(this);
		}

		return goalItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IGrouping} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GroupingItemProvider groupingItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IGrouping}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGroupingAdapter() {
		if (groupingItemProvider == null) {
			groupingItemProvider = new GroupingItemProvider(this);
		}

		return groupingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IImplementationEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImplementationEventItemProvider implementationEventItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IImplementationEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImplementationEventAdapter() {
		if (implementationEventItemProvider == null) {
			implementationEventItemProvider = new ImplementationEventItemProvider(this);
		}

		return implementationEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.ILocation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LocationItemProvider locationItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.ILocation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLocationAdapter() {
		if (locationItemProvider == null) {
			locationItemProvider = new LocationItemProvider(this);
		}

		return locationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IMaterial} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MaterialItemProvider materialItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IMaterial}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMaterialAdapter() {
		if (materialItemProvider == null) {
			materialItemProvider = new MaterialItemProvider(this);
		}

		return materialItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IMeaning} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MeaningItemProvider meaningItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IMeaning}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMeaningAdapter() {
		if (meaningItemProvider == null) {
			meaningItemProvider = new MeaningItemProvider(this);
		}

		return meaningItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.INode} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NodeItemProvider nodeItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.INode}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNodeAdapter() {
		if (nodeItemProvider == null) {
			nodeItemProvider = new NodeItemProvider(this);
		}

		return nodeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IOutcome} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OutcomeItemProvider outcomeItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IOutcome}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOutcomeAdapter() {
		if (outcomeItemProvider == null) {
			outcomeItemProvider = new OutcomeItemProvider(this);
		}

		return outcomeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IPath} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PathItemProvider pathItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IPath}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPathAdapter() {
		if (pathItemProvider == null) {
			pathItemProvider = new PathItemProvider(this);
		}

		return pathItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IPlateau} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PlateauItemProvider plateauItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IPlateau}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPlateauAdapter() {
		if (plateauItemProvider == null) {
			plateauItemProvider = new PlateauItemProvider(this);
		}

		return plateauItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IPrinciple} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrincipleItemProvider principleItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IPrinciple}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPrincipleAdapter() {
		if (principleItemProvider == null) {
			principleItemProvider = new PrincipleItemProvider(this);
		}

		return principleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IProduct} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProductItemProvider productItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IProduct}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProductAdapter() {
		if (productItemProvider == null) {
			productItemProvider = new ProductItemProvider(this);
		}

		return productItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IRepresentation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RepresentationItemProvider representationItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IRepresentation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRepresentationAdapter() {
		if (representationItemProvider == null) {
			representationItemProvider = new RepresentationItemProvider(this);
		}

		return representationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ResourceItemProvider resourceItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createResourceAdapter() {
		if (resourceItemProvider == null) {
			resourceItemProvider = new ResourceItemProvider(this);
		}

		return resourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IRequirement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequirementItemProvider requirementItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IRequirement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequirementAdapter() {
		if (requirementItemProvider == null) {
			requirementItemProvider = new RequirementItemProvider(this);
		}

		return requirementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IStakeholder} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StakeholderItemProvider stakeholderItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IStakeholder}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStakeholderAdapter() {
		if (stakeholderItemProvider == null) {
			stakeholderItemProvider = new StakeholderItemProvider(this);
		}

		return stakeholderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.ISystemSoftware} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SystemSoftwareItemProvider systemSoftwareItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.ISystemSoftware}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSystemSoftwareAdapter() {
		if (systemSoftwareItemProvider == null) {
			systemSoftwareItemProvider = new SystemSoftwareItemProvider(this);
		}

		return systemSoftwareItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.ITechnologyCollaboration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TechnologyCollaborationItemProvider technologyCollaborationItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.ITechnologyCollaboration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTechnologyCollaborationAdapter() {
		if (technologyCollaborationItemProvider == null) {
			technologyCollaborationItemProvider = new TechnologyCollaborationItemProvider(this);
		}

		return technologyCollaborationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.ITechnologyEvent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TechnologyEventItemProvider technologyEventItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.ITechnologyEvent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTechnologyEventAdapter() {
		if (technologyEventItemProvider == null) {
			technologyEventItemProvider = new TechnologyEventItemProvider(this);
		}

		return technologyEventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.ITechnologyFunction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TechnologyFunctionItemProvider technologyFunctionItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.ITechnologyFunction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTechnologyFunctionAdapter() {
		if (technologyFunctionItemProvider == null) {
			technologyFunctionItemProvider = new TechnologyFunctionItemProvider(this);
		}

		return technologyFunctionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.ITechnologyInterface} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TechnologyInterfaceItemProvider technologyInterfaceItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.ITechnologyInterface}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTechnologyInterfaceAdapter() {
		if (technologyInterfaceItemProvider == null) {
			technologyInterfaceItemProvider = new TechnologyInterfaceItemProvider(this);
		}

		return technologyInterfaceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.ITechnologyInteraction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TechnologyInteractionItemProvider technologyInteractionItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.ITechnologyInteraction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTechnologyInteractionAdapter() {
		if (technologyInteractionItemProvider == null) {
			technologyInteractionItemProvider = new TechnologyInteractionItemProvider(this);
		}

		return technologyInteractionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.ITechnologyProcess} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TechnologyProcessItemProvider technologyProcessItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.ITechnologyProcess}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTechnologyProcessAdapter() {
		if (technologyProcessItemProvider == null) {
			technologyProcessItemProvider = new TechnologyProcessItemProvider(this);
		}

		return technologyProcessItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.ITechnologyService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TechnologyServiceItemProvider technologyServiceItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.ITechnologyService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTechnologyServiceAdapter() {
		if (technologyServiceItemProvider == null) {
			technologyServiceItemProvider = new TechnologyServiceItemProvider(this);
		}

		return technologyServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueItemProvider valueItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueAdapter() {
		if (valueItemProvider == null) {
			valueItemProvider = new ValueItemProvider(this);
		}

		return valueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IValueStream} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueStreamItemProvider valueStreamItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IValueStream}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueStreamAdapter() {
		if (valueStreamItemProvider == null) {
			valueStreamItemProvider = new ValueStreamItemProvider(this);
		}

		return valueStreamItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IWorkPackage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WorkPackageItemProvider workPackageItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IWorkPackage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWorkPackageAdapter() {
		if (workPackageItemProvider == null) {
			workPackageItemProvider = new WorkPackageItemProvider(this);
		}

		return workPackageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IAccessRelationship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AccessRelationshipItemProvider accessRelationshipItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IAccessRelationship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAccessRelationshipAdapter() {
		if (accessRelationshipItemProvider == null) {
			accessRelationshipItemProvider = new AccessRelationshipItemProvider(this);
		}

		return accessRelationshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IAggregationRelationship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AggregationRelationshipItemProvider aggregationRelationshipItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IAggregationRelationship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAggregationRelationshipAdapter() {
		if (aggregationRelationshipItemProvider == null) {
			aggregationRelationshipItemProvider = new AggregationRelationshipItemProvider(this);
		}

		return aggregationRelationshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IAssignmentRelationship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AssignmentRelationshipItemProvider assignmentRelationshipItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IAssignmentRelationship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAssignmentRelationshipAdapter() {
		if (assignmentRelationshipItemProvider == null) {
			assignmentRelationshipItemProvider = new AssignmentRelationshipItemProvider(this);
		}

		return assignmentRelationshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IAssociationRelationship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AssociationRelationshipItemProvider associationRelationshipItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IAssociationRelationship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAssociationRelationshipAdapter() {
		if (associationRelationshipItemProvider == null) {
			associationRelationshipItemProvider = new AssociationRelationshipItemProvider(this);
		}

		return associationRelationshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.ICompositionRelationship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompositionRelationshipItemProvider compositionRelationshipItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.ICompositionRelationship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompositionRelationshipAdapter() {
		if (compositionRelationshipItemProvider == null) {
			compositionRelationshipItemProvider = new CompositionRelationshipItemProvider(this);
		}

		return compositionRelationshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IFlowRelationship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FlowRelationshipItemProvider flowRelationshipItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IFlowRelationship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFlowRelationshipAdapter() {
		if (flowRelationshipItemProvider == null) {
			flowRelationshipItemProvider = new FlowRelationshipItemProvider(this);
		}

		return flowRelationshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IInfluenceRelationship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InfluenceRelationshipItemProvider influenceRelationshipItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IInfluenceRelationship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInfluenceRelationshipAdapter() {
		if (influenceRelationshipItemProvider == null) {
			influenceRelationshipItemProvider = new InfluenceRelationshipItemProvider(this);
		}

		return influenceRelationshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IRealizationRelationship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RealizationRelationshipItemProvider realizationRelationshipItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IRealizationRelationship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRealizationRelationshipAdapter() {
		if (realizationRelationshipItemProvider == null) {
			realizationRelationshipItemProvider = new RealizationRelationshipItemProvider(this);
		}

		return realizationRelationshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IServingRelationship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ServingRelationshipItemProvider servingRelationshipItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IServingRelationship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createServingRelationshipAdapter() {
		if (servingRelationshipItemProvider == null) {
			servingRelationshipItemProvider = new ServingRelationshipItemProvider(this);
		}

		return servingRelationshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.ISpecializationRelationship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SpecializationRelationshipItemProvider specializationRelationshipItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.ISpecializationRelationship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSpecializationRelationshipAdapter() {
		if (specializationRelationshipItemProvider == null) {
			specializationRelationshipItemProvider = new SpecializationRelationshipItemProvider(this);
		}

		return specializationRelationshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.ITriggeringRelationship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TriggeringRelationshipItemProvider triggeringRelationshipItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.ITriggeringRelationship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTriggeringRelationshipAdapter() {
		if (triggeringRelationshipItemProvider == null) {
			triggeringRelationshipItemProvider = new TriggeringRelationshipItemProvider(this);
		}

		return triggeringRelationshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IDiagramModelReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DiagramModelReferenceItemProvider diagramModelReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IDiagramModelReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDiagramModelReferenceAdapter() {
		if (diagramModelReferenceItemProvider == null) {
			diagramModelReferenceItemProvider = new DiagramModelReferenceItemProvider(this);
		}

		return diagramModelReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IDiagramModelGroup} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DiagramModelGroupItemProvider diagramModelGroupItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IDiagramModelGroup}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDiagramModelGroupAdapter() {
		if (diagramModelGroupItemProvider == null) {
			diagramModelGroupItemProvider = new DiagramModelGroupItemProvider(this);
		}

		return diagramModelGroupItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IDiagramModelNote} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DiagramModelNoteItemProvider diagramModelNoteItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IDiagramModelNote}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDiagramModelNoteAdapter() {
		if (diagramModelNoteItemProvider == null) {
			diagramModelNoteItemProvider = new DiagramModelNoteItemProvider(this);
		}

		return diagramModelNoteItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IDiagramModelImage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DiagramModelImageItemProvider diagramModelImageItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IDiagramModelImage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDiagramModelImageAdapter() {
		if (diagramModelImageItemProvider == null) {
			diagramModelImageItemProvider = new DiagramModelImageItemProvider(this);
		}

		return diagramModelImageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IDiagramModelConnection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DiagramModelConnectionItemProvider diagramModelConnectionItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IDiagramModelConnection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDiagramModelConnectionAdapter() {
		if (diagramModelConnectionItemProvider == null) {
			diagramModelConnectionItemProvider = new DiagramModelConnectionItemProvider(this);
		}

		return diagramModelConnectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IDiagramModelBendpoint} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DiagramModelBendpointItemProvider diagramModelBendpointItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IDiagramModelBendpoint}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDiagramModelBendpointAdapter() {
		if (diagramModelBendpointItemProvider == null) {
			diagramModelBendpointItemProvider = new DiagramModelBendpointItemProvider(this);
		}

		return diagramModelBendpointItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IBounds} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BoundsItemProvider boundsItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IBounds}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBoundsAdapter() {
		if (boundsItemProvider == null) {
			boundsItemProvider = new BoundsItemProvider(this);
		}

		return boundsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IArchimateDiagramModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArchimateDiagramModelItemProvider archimateDiagramModelItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IArchimateDiagramModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArchimateDiagramModelAdapter() {
		if (archimateDiagramModelItemProvider == null) {
			archimateDiagramModelItemProvider = new ArchimateDiagramModelItemProvider(this);
		}

		return archimateDiagramModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IDiagramModelArchimateObject} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DiagramModelArchimateObjectItemProvider diagramModelArchimateObjectItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IDiagramModelArchimateObject}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDiagramModelArchimateObjectAdapter() {
		if (diagramModelArchimateObjectItemProvider == null) {
			diagramModelArchimateObjectItemProvider = new DiagramModelArchimateObjectItemProvider(this);
		}

		return diagramModelArchimateObjectItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IDiagramModelArchimateConnection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DiagramModelArchimateConnectionItemProvider diagramModelArchimateConnectionItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IDiagramModelArchimateConnection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDiagramModelArchimateConnectionAdapter() {
		if (diagramModelArchimateConnectionItemProvider == null) {
			diagramModelArchimateConnectionItemProvider = new DiagramModelArchimateConnectionItemProvider(this);
		}

		return diagramModelArchimateConnectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.ISketchModel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SketchModelItemProvider sketchModelItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.ISketchModel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSketchModelAdapter() {
		if (sketchModelItemProvider == null) {
			sketchModelItemProvider = new SketchModelItemProvider(this);
		}

		return sketchModelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.ISketchModelSticky} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SketchModelStickyItemProvider sketchModelStickyItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.ISketchModelSticky}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSketchModelStickyAdapter() {
		if (sketchModelStickyItemProvider == null) {
			sketchModelStickyItemProvider = new SketchModelStickyItemProvider(this);
		}

		return sketchModelStickyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.ISketchModelActor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SketchModelActorItemProvider sketchModelActorItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.ISketchModelActor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSketchModelActorAdapter() {
		if (sketchModelActorItemProvider == null) {
			sketchModelActorItemProvider = new SketchModelActorItemProvider(this);
		}

		return sketchModelActorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IRevenueGenerationSystem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RevenueGenerationSystemItemProvider revenueGenerationSystemItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IRevenueGenerationSystem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRevenueGenerationSystemAdapter() {
		if (revenueGenerationSystemItemProvider == null) {
			revenueGenerationSystemItemProvider = new RevenueGenerationSystemItemProvider(this);
		}

		return revenueGenerationSystemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IThirdPartyProvider} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ThirdPartyProviderItemProvider thirdPartyProviderItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IThirdPartyProvider}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createThirdPartyProviderAdapter() {
		if (thirdPartyProviderItemProvider == null) {
			thirdPartyProviderItemProvider = new ThirdPartyProviderItemProvider(this);
		}

		return thirdPartyProviderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IStore} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StoreItemProvider storeItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IStore}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStoreAdapter() {
		if (storeItemProvider == null) {
			storeItemProvider = new StoreItemProvider(this);
		}

		return storeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IPlatform} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PlatformItemProvider platformItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IPlatform}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPlatformAdapter() {
		if (platformItemProvider == null) {
			platformItemProvider = new PlatformItemProvider(this);
		}

		return platformItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IRating} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RatingItemProvider ratingItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IRating}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRatingAdapter() {
		if (ratingItemProvider == null) {
			ratingItemProvider = new RatingItemProvider(this);
		}

		return ratingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IRanking} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RankingItemProvider rankingItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IRanking}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRankingAdapter() {
		if (rankingItemProvider == null) {
			rankingItemProvider = new RankingItemProvider(this);
		}

		return rankingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IReviewing} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReviewingItemProvider reviewingItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IReviewing}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReviewingAdapter() {
		if (reviewingItemProvider == null) {
			reviewingItemProvider = new ReviewingItemProvider(this);
		}

		return reviewingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IOpenness} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OpennessItemProvider opennessItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IOpenness}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOpennessAdapter() {
		if (opennessItemProvider == null) {
			opennessItemProvider = new OpennessItemProvider(this);
		}

		return opennessItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.ITechnologicalBoundaryResources} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TechnologicalBoundaryResourcesItemProvider technologicalBoundaryResourcesItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.ITechnologicalBoundaryResources}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTechnologicalBoundaryResourcesAdapter() {
		if (technologicalBoundaryResourcesItemProvider == null) {
			technologicalBoundaryResourcesItemProvider = new TechnologicalBoundaryResourcesItemProvider(this);
		}

		return technologicalBoundaryResourcesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.ISocialBoundaryResources} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SocialBoundaryResourcesItemProvider socialBoundaryResourcesItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.ISocialBoundaryResources}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSocialBoundaryResourcesAdapter() {
		if (socialBoundaryResourcesItemProvider == null) {
			socialBoundaryResourcesItemProvider = new SocialBoundaryResourcesItemProvider(this);
		}

		return socialBoundaryResourcesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link com.archimatetool.model.IContext} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContextItemProvider contextItemProvider;

	/**
	 * This creates an adapter for a {@link com.archimatetool.model.IContext}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContextAdapter() {
		if (contextItemProvider == null) {
			contextItemProvider = new ContextItemProvider(this);
		}

		return contextItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void dispose() {
		if (propertyItemProvider != null) propertyItemProvider.dispose();
		if (featureItemProvider != null) featureItemProvider.dispose();
		if (metadataItemProvider != null) metadataItemProvider.dispose();
		if (folderItemProvider != null) folderItemProvider.dispose();
		if (archimateModelItemProvider != null) archimateModelItemProvider.dispose();
		if (junctionItemProvider != null) junctionItemProvider.dispose();
		if (applicationCollaborationItemProvider != null) applicationCollaborationItemProvider.dispose();
		if (applicationComponentItemProvider != null) applicationComponentItemProvider.dispose();
		if (applicationEventItemProvider != null) applicationEventItemProvider.dispose();
		if (applicationFunctionItemProvider != null) applicationFunctionItemProvider.dispose();
		if (applicationInteractionItemProvider != null) applicationInteractionItemProvider.dispose();
		if (applicationInterfaceItemProvider != null) applicationInterfaceItemProvider.dispose();
		if (applicationProcessItemProvider != null) applicationProcessItemProvider.dispose();
		if (applicationServiceItemProvider != null) applicationServiceItemProvider.dispose();
		if (artifactItemProvider != null) artifactItemProvider.dispose();
		if (assessmentItemProvider != null) assessmentItemProvider.dispose();
		if (businessActorItemProvider != null) businessActorItemProvider.dispose();
		if (businessCollaborationItemProvider != null) businessCollaborationItemProvider.dispose();
		if (businessEventItemProvider != null) businessEventItemProvider.dispose();
		if (businessFunctionItemProvider != null) businessFunctionItemProvider.dispose();
		if (businessInteractionItemProvider != null) businessInteractionItemProvider.dispose();
		if (businessInterfaceItemProvider != null) businessInterfaceItemProvider.dispose();
		if (businessObjectItemProvider != null) businessObjectItemProvider.dispose();
		if (businessProcessItemProvider != null) businessProcessItemProvider.dispose();
		if (businessRoleItemProvider != null) businessRoleItemProvider.dispose();
		if (businessServiceItemProvider != null) businessServiceItemProvider.dispose();
		if (capabilityItemProvider != null) capabilityItemProvider.dispose();
		if (communicationNetworkItemProvider != null) communicationNetworkItemProvider.dispose();
		if (contractItemProvider != null) contractItemProvider.dispose();
		if (constraintItemProvider != null) constraintItemProvider.dispose();
		if (courseOfActionItemProvider != null) courseOfActionItemProvider.dispose();
		if (dataObjectItemProvider != null) dataObjectItemProvider.dispose();
		if (deliverableItemProvider != null) deliverableItemProvider.dispose();
		if (deviceItemProvider != null) deviceItemProvider.dispose();
		if (distributionNetworkItemProvider != null) distributionNetworkItemProvider.dispose();
		if (driverItemProvider != null) driverItemProvider.dispose();
		if (equipmentItemProvider != null) equipmentItemProvider.dispose();
		if (facilityItemProvider != null) facilityItemProvider.dispose();
		if (gapItemProvider != null) gapItemProvider.dispose();
		if (goalItemProvider != null) goalItemProvider.dispose();
		if (groupingItemProvider != null) groupingItemProvider.dispose();
		if (implementationEventItemProvider != null) implementationEventItemProvider.dispose();
		if (locationItemProvider != null) locationItemProvider.dispose();
		if (materialItemProvider != null) materialItemProvider.dispose();
		if (meaningItemProvider != null) meaningItemProvider.dispose();
		if (nodeItemProvider != null) nodeItemProvider.dispose();
		if (outcomeItemProvider != null) outcomeItemProvider.dispose();
		if (pathItemProvider != null) pathItemProvider.dispose();
		if (plateauItemProvider != null) plateauItemProvider.dispose();
		if (principleItemProvider != null) principleItemProvider.dispose();
		if (productItemProvider != null) productItemProvider.dispose();
		if (representationItemProvider != null) representationItemProvider.dispose();
		if (resourceItemProvider != null) resourceItemProvider.dispose();
		if (requirementItemProvider != null) requirementItemProvider.dispose();
		if (stakeholderItemProvider != null) stakeholderItemProvider.dispose();
		if (systemSoftwareItemProvider != null) systemSoftwareItemProvider.dispose();
		if (technologyCollaborationItemProvider != null) technologyCollaborationItemProvider.dispose();
		if (technologyEventItemProvider != null) technologyEventItemProvider.dispose();
		if (technologyFunctionItemProvider != null) technologyFunctionItemProvider.dispose();
		if (technologyInterfaceItemProvider != null) technologyInterfaceItemProvider.dispose();
		if (technologyInteractionItemProvider != null) technologyInteractionItemProvider.dispose();
		if (technologyProcessItemProvider != null) technologyProcessItemProvider.dispose();
		if (technologyServiceItemProvider != null) technologyServiceItemProvider.dispose();
		if (valueItemProvider != null) valueItemProvider.dispose();
		if (valueStreamItemProvider != null) valueStreamItemProvider.dispose();
		if (workPackageItemProvider != null) workPackageItemProvider.dispose();
		if (accessRelationshipItemProvider != null) accessRelationshipItemProvider.dispose();
		if (aggregationRelationshipItemProvider != null) aggregationRelationshipItemProvider.dispose();
		if (assignmentRelationshipItemProvider != null) assignmentRelationshipItemProvider.dispose();
		if (associationRelationshipItemProvider != null) associationRelationshipItemProvider.dispose();
		if (compositionRelationshipItemProvider != null) compositionRelationshipItemProvider.dispose();
		if (flowRelationshipItemProvider != null) flowRelationshipItemProvider.dispose();
		if (influenceRelationshipItemProvider != null) influenceRelationshipItemProvider.dispose();
		if (realizationRelationshipItemProvider != null) realizationRelationshipItemProvider.dispose();
		if (servingRelationshipItemProvider != null) servingRelationshipItemProvider.dispose();
		if (specializationRelationshipItemProvider != null) specializationRelationshipItemProvider.dispose();
		if (triggeringRelationshipItemProvider != null) triggeringRelationshipItemProvider.dispose();
		if (diagramModelReferenceItemProvider != null) diagramModelReferenceItemProvider.dispose();
		if (diagramModelGroupItemProvider != null) diagramModelGroupItemProvider.dispose();
		if (diagramModelNoteItemProvider != null) diagramModelNoteItemProvider.dispose();
		if (diagramModelImageItemProvider != null) diagramModelImageItemProvider.dispose();
		if (diagramModelConnectionItemProvider != null) diagramModelConnectionItemProvider.dispose();
		if (diagramModelBendpointItemProvider != null) diagramModelBendpointItemProvider.dispose();
		if (boundsItemProvider != null) boundsItemProvider.dispose();
		if (archimateDiagramModelItemProvider != null) archimateDiagramModelItemProvider.dispose();
		if (diagramModelArchimateObjectItemProvider != null) diagramModelArchimateObjectItemProvider.dispose();
		if (diagramModelArchimateConnectionItemProvider != null) diagramModelArchimateConnectionItemProvider.dispose();
		if (sketchModelItemProvider != null) sketchModelItemProvider.dispose();
		if (sketchModelStickyItemProvider != null) sketchModelStickyItemProvider.dispose();
		if (sketchModelActorItemProvider != null) sketchModelActorItemProvider.dispose();
		if (revenueGenerationSystemItemProvider != null) revenueGenerationSystemItemProvider.dispose();
		if (thirdPartyProviderItemProvider != null) thirdPartyProviderItemProvider.dispose();
		if (storeItemProvider != null) storeItemProvider.dispose();
		if (platformItemProvider != null) platformItemProvider.dispose();
		if (ratingItemProvider != null) ratingItemProvider.dispose();
		if (rankingItemProvider != null) rankingItemProvider.dispose();
		if (reviewingItemProvider != null) reviewingItemProvider.dispose();
		if (opennessItemProvider != null) opennessItemProvider.dispose();
		if (technologicalBoundaryResourcesItemProvider != null) technologicalBoundaryResourcesItemProvider.dispose();
		if (socialBoundaryResourcesItemProvider != null) socialBoundaryResourcesItemProvider.dispose();
		if (contextItemProvider != null) contextItemProvider.dispose();
	}

}
